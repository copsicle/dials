{"version":3,"sources":["components/TextView.js","components/Navbar.js","components/AltitudeBar.js","components/DialApp.js","index.js"],"names":["TextView","props","state","this","dials","alt","his","adi","React","Component","Navbar","visual","className","disabled","onClick","click","AltitudeBar","barStyle","position","backgroundColor","opacity","width","height","left","bottom","style","DialApp","event","setState","fetch","window","location","href","method","then","response","json","data","catch","error","console","log","message","interval","setInterval","tick","getDialData","clearInterval","changeVisualState","bind","ReactDOM","render","document","getElementById"],"mappings":"8OA4BeA,E,kDAxBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,0CAKnB,WACI,OACI,kDAEeC,KAAKF,MAAMG,MAAMC,IAFhC,QAIUF,KAAKF,MAAMG,MAAME,IAJ3B,QAMUH,KAAKF,MAAMG,MAAMG,W,GAdhBC,IAAMC,WC0CdC,G,wDAxCX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,0CAKnB,WACI,OAAIC,KAAKF,MAAMU,OAGP,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACI,wBAAQC,UAAU,EAAlB,sBAEJ,8BACI,wBAAQC,QAASX,KAAKF,MAAMc,MAA5B,uBAQR,sBAAKH,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACI,wBAAQE,QAASX,KAAKF,MAAMc,MAA5B,sBAEJ,8BACI,wBAAQF,UAAU,EAAlB,2B,GA5BHL,IAAMC,YCArBO,G,kNAOFC,SAAW,CACPC,SAAU,WACVC,gBAAiB,QACjBC,QAAS,MACTC,MAAO,OACPC,OAAQ,KACRC,KAAM,OAENC,OAAU,EAAKvB,MAAMI,IAAM,GAAM,IAAO,K,4CAG5C,WACI,OACI,qBAAKO,UAAU,kBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,aAAf,kBACA,qBAAKA,UAAU,gBAAf,kBACA,qBAAKA,UAAU,gBAAf,kBACA,qBAAKA,UAAU,gBAAf,eACA,qBAAKa,MAAOtB,KAAKc,oB,GA1BXT,IAAMC,YAiCjBO,ICwCAU,G,wDApEX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAETE,MAAO,CAEHC,IAAK,KAELC,IAAK,EAELC,IAAK,GAGTI,QAAQ,GAbG,E,qDAiBnB,SAAkBgB,GAEdxB,KAAKyB,SAAS,CAACjB,QAASR,KAAKD,MAAMS,W,yBAGvC,WAAe,IAAD,OAEVkB,MAAMC,OAAOC,SAASC,KAAO,WAAY,CAACC,OAAQ,QAAQC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAACG,GAChG,EAAKT,SAAS,CAACxB,MAAOiC,OACvBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,c,+BAI1B,WAAqB,IAAD,OAEhBvC,KAAKwC,SAAWC,aAAY,kBAAM,EAAKC,SAAQ,O,kBAGnD,WAEI1C,KAAK2C,gB,kCAGT,WAEIC,cAAc5C,KAAKwC,Y,oBAGvB,WAEI,OAAIxC,KAAKD,MAAMS,OAGP,sBAAKC,UAAU,MAAf,UACI,cAAC,EAAD,CAAQD,OAAQR,KAAKD,MAAMS,OAAQI,MAAOZ,KAAK6C,kBAAkBC,KAAK9C,QACtE,cAAC,EAAD,CAAaE,IAAKF,KAAKD,MAAME,MAAMC,SAMvC,sBAAKO,UAAU,MAAf,UACI,cAAC,EAAD,CAAQD,OAAQR,KAAKD,MAAMS,OAAQI,MAAOZ,KAAK6C,kBAAkBC,KAAK9C,QACtE,cAAC,EAAD,CAAUC,MAAOD,KAAKD,MAAME,e,GA9D1BI,IAAMC,YCH5ByC,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.f43bf3d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TextView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <>\n\n                Altitude: {this.props.dials.alt}\n                \n                HIS: {this.props.dials.his}\n                \n                ADI: {this.props.dials.adi}\n\n            </>\n        );\n    }\n}\n\nTextView.propTypes = {\n    dials: PropTypes.object,\n};\n\nexport default TextView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Navbar.css'\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        if (this.props.visual){\n            // If in visual mode highlight and disable the visual button\n            return (\n                <div className=\"Button-Pad\">\n                    <div className=\"Button-Space\">\n                        <button disabled={true}>Visual</button>\n                    </div>\n                    <div>\n                        <button onClick={this.props.click}>Text</button>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            // Otherwise highlight and disable the text button\n            return (\n                <div className=\"Button-Pad\">\n                    <div className=\"Button-Space\">\n                        <button onClick={this.props.click}>Visual</button>\n                    </div>\n                    <div>\n                        <button disabled={true}>Text</button>\n                    </div>\n                </div>\n            );\n        }    \n    }\n}\n\nNavbar.propTypes = {\n    visual: PropTypes.bool,\n    click: PropTypes.func,\n};\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AltitudeBar.css';\n\nclass AltitudeBar extends React.Component {\n    // Meter - The container with the number values\n    // Bar - The black rectangle which indicates the value\n    static propTypes = {\n        alt: PropTypes.number,\n    };\n    // Style for moving the bar in the meter by altitude value\n    barStyle = {\n        position: 'absolute',\n        backgroundColor: 'black',\n        opacity: \"0.8\",\n        width: '150%',\n        height: '3%',\n        left: '-25%',\n        // Get precentage to move up the meter while accounting for bar height\n        bottom: ((this.props.alt / 30) - 1.5) + '%',\n    }\n\n    render() {\n        return (\n            <div className=\"Meter-Container\">\n                <div className=\"Meter\">\n                    <div className=\"Spacer-Top\">3000</div>\n                    <div className=\"Spacer-Middle\">2000</div>\n                    <div className=\"Spacer-Middle\">1000</div>\n                    <div className=\"Spacer-Bottom\">0</div>\n                    <div style={this.barStyle}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AltitudeBar;\n","// Main container for the web application\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport TextView from './TextView';\nimport Navbar from './Navbar';\nimport AltitudeBar from './AltitudeBar';\nimport './DialApp.css';\n\nclass DialApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Values from the server to pass down to the components\n            dials: {\n                // Altitude (between 0 - 3000)\n                alt: 1500,\n                // Rotation (between 0 - 360)\n                his: 2,\n                // Horizon Angle (between -100 - 100)\n                adi: 3,\n            },\n            // Boolean for switching between visual and text mode (true - visual mode)\n            visual: true,\n        };\n    }\n\n    changeVisualState(event) {\n        // Method for the navbar to change the visual state\n        this.setState({visual: !this.state.visual})\n    }\n\n    getDialData() {\n        // Get JSON of dial values from the server and parse into the dials state\n        fetch(window.location.href + 'api/data', {method: 'GET'}).then((response) => response.json()).then((data) => {\n            this.setState({dials: data});\n        }).catch(error => {\n            console.log(error.message);\n        })\n    }\n    \n    componentDidMount() {\n        // Set tick rate to 1 second\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    tick() {\n        // Update dial values every tick\n        this.getDialData();\n    }\n\n    componentWillUnmount() {\n        // Clear tick rate when unmounted\n        clearInterval(this.interval);\n    }\n\n    render() {\n        // Switch rendering between visual and text mode\n        if (this.state.visual){\n            // Render the navbar and visual components if in visual mode\n            return (\n                <div className=\"Box\">\n                    <Navbar visual={this.state.visual} click={this.changeVisualState.bind(this)} />\n                    <AltitudeBar alt={this.state.dials.alt}/>\n                </div>\n            );\n        } else {\n            // Render the navbar and the text component only if not\n            return (\n                <div className=\"Box\">\n                    <Navbar visual={this.state.visual} click={this.changeVisualState.bind(this)} />\n                    <TextView dials={this.state.dials} />\n                </div>\n            );\n        }\n    }\n}\n\nexport default DialApp;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport DialApp from \"./components/DialApp\"\n\n// Render single application in root\nReactDOM.render(<DialApp />, document.getElementById(\"root\"))"],"sourceRoot":""}